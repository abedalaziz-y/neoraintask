{"version":3,"file":"static/js/75.6423c8b9.chunk.js","mappings":"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","sources":["component/pages/AdminPages/ActivityPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table, Input, Button, Space, Spin, DatePicker, Select } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { GETALLACTIVITY } from '../../../functions/auth';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\nimport io from 'socket.io-client';\nimport { toast } from 'react-toastify';\n\nconst { Option } = Select;\n\nconst ActivityPage = () => {\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchText, setSearchText] = useState('');\n  const [filteredActivities, setFilteredActivities] = useState([]);\n  const [activityTypeFilter, setActivityTypeFilter] = useState(null);\n  const [emailFilter, setEmailFilter] = useState('');\n  const [dateFilter, setDateFilter] = useState(null);\n  const [mostActiveUser, setMostActiveUser] = useState(null);\n  const { user } = useSelector((state) => state);\n\n  useEffect(() => {\n    const socket = io('https://user-analytics-system-825467496328.us-central1.run.app'); \n\n    socket.on('newActivityrecord', (activity) => {\n      setActivities((prevActivities) => {\n        const updatedActivities = [...prevActivities, activity];\n        setFilteredActivities(updatedActivities);\n        toast.success(`New activity recorded: ${activity.activity}`);\n        return updatedActivities;\n      });\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchActivities = async () => {\n      try {\n        const response = await GETALLACTIVITY(user.token);\n        if (response && response.data) {\n          const formattedActivities = response.data.map((item) => {\n            const action = item.action;\n            let activity = '';\n            let email = '';\n            let timestamp = '';\n\n            if (typeof action === 'string') {\n              activity = action;\n            } else if (typeof action === 'object') {\n              activity = action.activity || 'Unknown Activity';\n              email = action.email || '';\n              timestamp = action.timestamp || '';\n            }\n\n            return {\n              id: item.id,\n              activity,\n              email,\n              timestamp,\n            };\n          });\n\n          setActivities(formattedActivities);\n          setFilteredActivities(formattedActivities);\n          setLoading(false);\n        } else {\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching activities:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchActivities();\n  }, [user.token]);\n\n  const handleSearch = (e) => {\n    setSearchText(e.target.value);\n    filterActivities(e.target.value, activityTypeFilter, emailFilter, dateFilter, mostActiveUser);\n  };\n\n  const handleActivityFilterChange = (value) => {\n    setActivityTypeFilter(value);\n    filterActivities(searchText, value, emailFilter, dateFilter, mostActiveUser);\n  };\n\n  const handleEmailFilterChange = (e) => {\n    const value = e.target.value;\n    setEmailFilter(value);\n    filterActivities(searchText, activityTypeFilter, value, dateFilter, mostActiveUser);\n  };\n\n  const handleDateFilterChange = (date, dateString) => {\n    setDateFilter(dateString);\n    filterActivities(searchText, activityTypeFilter, emailFilter, dateString, mostActiveUser);\n  };\n\n  const handleMostActiveUserFilter = () => {\n    const activityCounts = activities.reduce((counts, activity) => {\n      counts[activity.email] = (counts[activity.email] || 0) + 1;\n      return counts;\n    }, {});\n    const mostActive = Object.entries(activityCounts).sort((a, b) => b[1] - a[1])[0]?.[0];\n    setMostActiveUser(mostActive);\n    filterActivities(searchText, activityTypeFilter, emailFilter, dateFilter, mostActive);\n  };\n\n  const handleResetFilters = () => {\n    setActivityTypeFilter(null);\n    setEmailFilter('');\n    setDateFilter(null);\n    setSearchText('');\n    setMostActiveUser(null);\n    setFilteredActivities(activities);\n  };\n\n  const filterActivities = (search = '', activityType = null, email = '', date = null, mostActive = null) => {\n    let filtered = activities.filter((activity) => {\n      return (\n        activity.activity.toLowerCase().includes(search.toLowerCase()) &&\n        (activityType ? activity.activity.includes(activityType) : true) &&\n        (email ? activity.email.includes(email) : true) &&\n        (date ? moment(activity.timestamp).isSame(date, 'day') : true) &&\n        (mostActive ? activity.email === mostActive : true)\n      );\n    });\n    setFilteredActivities(filtered);\n  };\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          autoFocus\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => confirm()}\n          style={{ marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              confirm();\n              handleSearch({ target: { value: selectedKeys[0] } });\n            }}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => {\n              clearFilters && clearFilters();\n              handleResetFilters();\n            }}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n  });\n\n  const uniqueActivities = [...new Set(activities.map((item) => item.activity))]; // Get unique activities\n\n  const columns = [\n    {\n      title: 'Activity',\n      dataIndex: 'activity',\n      key: 'activity',\n      ...getColumnSearchProps('activity'),\n      filterDropdown: (\n        <div style={{ padding: 8 }}>\n          <Select\n            placeholder=\"Filter by Activity\"\n            style={{ width: 200 }}\n            onChange={handleActivityFilterChange}\n            value={activityTypeFilter}\n          >\n            {uniqueActivities.map((activity, index) => (\n              <Option key={index} value={activity}>\n                {activity}\n              </Option>\n            ))}\n          </Select>\n        </div>\n      ),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      ...getColumnSearchProps('email'),\n      filterDropdown: (\n        <div style={{ padding: 8 }}>\n          <Input\n            placeholder=\"Filter by Email\"\n            value={emailFilter}\n            onChange={handleEmailFilterChange}\n          />\n        </div>\n      ),\n    },\n    {\n      title: 'Timestamp',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      render: (timestamp) => new Date(timestamp).toLocaleString(),\n      filterDropdown: (\n        <div style={{ padding: 8 }}>\n          <DatePicker onChange={handleDateFilterChange} />\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <h1 className=\"text-center text-danger\">User Activities</h1>\n      <Space style={{ marginBottom: 16 }}>\n        <Button onClick={handleMostActiveUserFilter} type=\"primary\">\n          Most Active User\n        </Button>\n        <Button onClick={handleResetFilters}>Reset Filters</Button>\n      </Space>\n      {loading ? (\n        <Spin size=\"large\" />\n      ) : (\n        <Table\n          columns={columns}\n          dataSource={filteredActivities}\n          rowKey=\"id\"\n          pagination={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ActivityPage;\n"],"names":["Option","Select","ActivityPage","activities","setActivities","useState","loading","setLoading","searchText","setSearchText","filteredActivities","setFilteredActivities","activityTypeFilter","setActivityTypeFilter","emailFilter","setEmailFilter","dateFilter","setDateFilter","mostActiveUser","setMostActiveUser","user","useSelector","state","useEffect","socket","io","on","activity","prevActivities","updatedActivities","toast","success","concat","disconnect","async","response","GETALLACTIVITY","token","data","formattedActivities","map","item","action","email","timestamp","id","error","console","fetchActivities","handleResetFilters","filterActivities","search","arguments","length","undefined","activityType","date","mostActive","filtered","filter","toLowerCase","includes","moment","isSame","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","selectedKeys","confirm","clearFilters","_jsxs","style","padding","children","_jsx","Input","autoFocus","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","Space","Button","type","onClick","icon","SearchOutlined","size","width","filterIcon","color","uniqueActivities","Set","columns","_objectSpread","title","key","index","render","Date","toLocaleString","DatePicker","handleDateFilterChange","dateString","className","handleMostActiveUserFilter","_Object$entries$sort$","activityCounts","reduce","counts","Object","entries","sort","a","b","Spin","Table","dataSource","rowKey","pagination"],"sourceRoot":""}