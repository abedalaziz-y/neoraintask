{"version":3,"file":"static/js/928.3da52062.chunk.js","mappings":"2NAQA,MAsJA,EAtJyBA,KACvB,MAAMC,GAAQC,EAAAA,EAAAA,KAAaD,GAAUA,KAC/B,cAAEE,GAAkBF,GACpB,MAAEG,GAAUD,EACdE,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KACjC,KAAEG,IAASZ,EAAAA,EAAAA,KAAaD,IAAKc,EAAAA,EAAAA,GAAA,GAAWd,MAE9Ce,EAAAA,EAAAA,YAAU,KACJF,GAAQA,EAAKG,OACfV,EAAS,IACX,GACC,CAACO,EAAMP,IAEV,MAkEOW,EAAkBC,IAAuBR,EAAAA,EAAAA,UAAS,CACvDS,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAc,IAEhB,OAEEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAEJD,EAAAA,EAAAA,MAAA,WAASE,UAAU,YAAWD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAACA,EAAAA,EAAAA,KAAA,YAAe,KAAC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","sources":["component/pages/RegisterComplete.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { auth } from '../../firebase';\nimport { CRUDUSER } from '../../functions/auth';\nimport './registerComplete.css'; // Import the CSS for animation\n\nconst RegisterComplete = () => {\n  const state = useSelector((state) => state);\n  const { registeration } = state;\n  const { email } = registeration;\nconst dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [picture, setPicture] = useState([]);\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    if (user && user.token) {\n      navigate('/');\n    }\n  }, [user, navigate]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\nconsole.log(registeration,password)\n    if (!registeration.email || !password) {\n      toast.error('Email and Password are required');\n      return;\n    }\n    if (password.length < 6) {\n      toast.error('Password is too short!');\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(email, window.location.href);\n\n      if (result.user.emailVerified) {\n        const currentUser = auth.currentUser;\n        await currentUser.updatePassword(password);\n\n        const idTokenResult = await currentUser.getIdTokenResult();\n\n        // Redux store\n        CRUDUSER(idTokenResult.token)\n        .then((res) => {\n          console.log(\"CRUDUSER API Response:\", res.data); // Debugging log\n          if (res.data && res.data.role && res.data.token) {\n            dispatch({\n              type: \"LOGED_IN_USER\",\n              payload: {\n                name: res.data.name,\n                email: res.data.email,\n                role: res.data.role,\n                picture: res.data?.picture?.url,\n                token: res.data.token,\n              },\n            });\n            toast.success(\"User successfully logged in.\");\n          } else {\n            toast.error(\"Invalid response from the server.\");\n          }\n        })\n        .catch((err) => {\n          console.error(\"Error saving user info:\", err); \n          toast.error(\"Error saving user info. Please try again.\");\n        });\n      \n        // navigate('/');\n      }\n    } catch (error) {\n      toast.error(error.message);\n      setPassword('');\n      setPicture([]);\n    }\n  }\n  const handlePasswordChange = (e) => {\n    const value = e.target.value;\n    setPassword(value);\n\n    // Validate password strength\n    setPasswordStrength({\n      hasUppercase: /[A-Z]/.test(value),\n      hasLowercase: /[a-z]/.test(value),\n      hasNumber: /[0-9]/.test(value),\n      hasMinLength: value.length >= 6,\n    });\n  };\n  const [passwordStrength, setPasswordStrength] = useState({\n    hasUppercase: false,\n    hasLowercase: false,\n    hasNumber: false,\n    hasMinLength: false,\n  });\n  return (\n\n    <div>\n\n<section className='customize'> \n  <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> <small></small> \n  <div className=\"signin\">\n          <div className=\"register-form\">\n            <h1 className=\"title text-white\">Register Complete</h1>\n            <form onSubmit={handleSubmit} className=\"form\">\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  placeholder=\"Create password\"\n                  value={password}\n                  onChange={handlePasswordChange}\n                  autoFocus\n                />\n              </div>\n\n              {/* Password Requirements */}\n              <div className=\"alert alert-info mt-3\">\n                <p className=\"mb-1\">Password must include:</p>\n                <ul className=\"mb-0\">\n                  <li style={{ color: passwordStrength.hasUppercase ? 'green' : 'red' }}>\n                    {passwordStrength.hasUppercase ? '✔' : '✘'} At least one uppercase letter\n                  </li>\n                  <li style={{ color: passwordStrength.hasLowercase ? 'green' : 'red' }}>\n                    {passwordStrength.hasLowercase ? '✔' : '✘'} At least one lowercase letter\n                  </li>\n                  <li style={{ color: passwordStrength.hasNumber ? 'green' : 'red' }}>\n                    {passwordStrength.hasNumber ? '✔' : '✘'} At least one number\n                  </li>\n                  <li style={{ color: passwordStrength.hasMinLength ? 'green' : 'red' }}>\n                    {passwordStrength.hasMinLength ? '✔' : '✘'} Minimum 6 characters\n                  </li>\n                </ul>\n              </div>\n\n              <button\n                className=\"btn-submit\"\n                type=\"submit\"\n                disabled={\n                  !passwordStrength.hasUppercase ||\n                  !passwordStrength.hasLowercase ||\n                  !passwordStrength.hasNumber ||\n                  !passwordStrength.hasMinLength\n                }\n              >\n                Finish\n              </button>\n            </form>\n            <div className=\"already text-center text-white-50\">\n              You already have an account? <Link to=\"/Login\">Login here</Link>\n            </div>\n          </div>\n        </div></section> </div>\n  );\n};\n\nexport default RegisterComplete;\n"],"names":["RegisterComplete","state","useSelector","registeration","email","dispatch","useDispatch","navigate","useNavigate","password","setPassword","useState","picture","setPicture","user","_objectSpread","useEffect","token","passwordStrength","setPasswordStrength","hasUppercase","hasLowercase","hasNumber","hasMinLength","_jsxs","children","className","_jsx","onSubmit","async","e","preventDefault","console","log","length","toast","error","auth","signInWithEmailLink","window","location","href","emailVerified","currentUser","updatePassword","idTokenResult","getIdTokenResult","CRUDUSER","then","res","_res$data","_res$data$picture","data","role","type","payload","name","url","success","catch","err","message","placeholder","value","onChange","target","test","autoFocus","style","color","disabled","Link","to"],"sourceRoot":""}